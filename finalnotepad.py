# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'notepad_1.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtPrintSupport import QPrinter, QPrintDialog

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Triangular)


        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setObjectName("textEdit")
        self.horizontalLayout_8.addWidget(self.textEdit)
        MainWindow.setCentralWidget(self.textEdit)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 434, 18))
        self.menubar.setObjectName("menubar")
        self.menufile = QtWidgets.QMenu(self.menubar)
        self.menufile.setObjectName("menufile")
        self.menuedit = QtWidgets.QMenu(self.menubar)
        self.menuedit.setObjectName("menuedit")
        self.menuview = QtWidgets.QMenu(self.menubar)

    
        



        self.menuview.setObjectName("menuview")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.toolBar.setMouseTracking(False)
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        MainWindow.insertToolBarBreak(self.toolBar)
        self.new_icon = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("C:/Users/Aneesh.s/OneDrive/Desktop/mixed circuit signal/add-file.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.new_icon.setIcon(icon)
        self.new_icon.setObjectName("new_icon")

        
        self.new_icon.triggered.connect(self.new_fun)

        self.actionopen = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("C:/Users/Aneesh.s/OneDrive/Desktop/mixed circuit signal/folder.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionopen.setIcon(icon1)
        self.actionopen.setObjectName("actionopen")
        self.actionsave = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("C:/Users/Aneesh.s/OneDrive/Desktop/mixed circuit signal/diskette.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionsave.setIcon(icon2)
        self.actionsave.setObjectName("actionsave")

        self.actionsave.triggered.connect(self.save_fun)

        self.actioncut = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("C:/Users/Aneesh.s/OneDrive/Desktop/mixed circuit signal/cut.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actioncut.setIcon(icon3)
        self.actioncut.setObjectName("actioncut")

        self.actioncut.triggered.connect(self.cut_fun)

        self.actioncopy = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("C:/Users/Aneesh.s/OneDrive/Desktop/mixed circuit signal/copy-two-paper-sheets-interface-symbol.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actioncopy.setIcon(icon4)
        self.actioncopy.setObjectName("actioncopy")
        self.actioncopy.triggered.connect(self.copy_fun)

        self.actionpaste = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("C:/Users/Aneesh.s/OneDrive/Desktop/mixed circuit signal/paste.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionpaste.setIcon(icon5)
        self.actionpaste.setObjectName("actionpaste")

        self.actionpaste.triggered.connect(self.paste_fun)

        self.actionZoom_out = QtWidgets.QAction(MainWindow)
        
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("C:/Users/Aneesh.s/OneDrive/Desktop/mixed circuit signal/magnifying-glass.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoom_out.setIcon(icon6)
        self.actionZoom_out.setObjectName("actionZoom_out")
        self.actionZoom_out.triggered.connect(self.zoomout_fun)
        self.actionundo = QtWidgets.QAction(MainWindow)
        self.actionundo.setObjectName("actionundo")
        self.actionundo.triggered.connect(self.undo_fun)
        self.actionredo = QtWidgets.QAction(MainWindow)
        self.actionredo.setObjectName("actionredo")
        self.actionredo.triggered.connect(self.redo_fun)

        self.actionprint = QtWidgets.QAction(MainWindow)
        self.actionprint.setObjectName("actionprint")
        self.actionprint.triggered.connect(self.print_file)
        





        self.actionZoom_in_1 = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("C:/Users/Aneesh.s/OneDrive/Desktop/mixed circuit signal/zoom-in.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoom_in_1.setIcon(icon7)
        self.actionZoom_in_1.setObjectName("actionZoom_in_1")
        self.actionZoom_in_1.triggered.connect(self.zoomin_fun)
        self.menufile.addAction(self.new_icon)
        self.menufile.addAction(self.actionopen)

        self.actionopen.triggered.connect(self.open_fun)

        self.menufile.addAction(self.actionsave)
        self.menufile.addAction(self.actionprint)


        self.menufile.addSeparator()
        self.menufile.addSeparator()
        self.menuedit.addAction(self.actioncut)
        self.menuedit.addAction(self.actioncopy)
        self.menuedit.addAction(self.actionpaste)
        
        self.menuedit.addAction(self.actionundo)
        self.menuedit.addAction(self.actionredo)
        

        
        self.menuview.addAction(self.actionZoom_in_1)
        self.menuview.addAction(self.actionZoom_out)
        self.menubar.addAction(self.menufile.menuAction())
        self.menubar.addAction(self.menuedit.menuAction())
        self.menubar.addAction(self.menuview.menuAction())
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.new_icon)
        self.toolBar.addAction(self.actionopen)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionsave)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actioncut)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actioncopy)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionpaste)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionZoom_in_1)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionZoom_out)
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Ente Book"))
        self.menufile.setTitle(_translate("MainWindow", "file"))
        self.menuedit.setTitle(_translate("MainWindow", "edit"))
        self.menuview.setTitle(_translate("MainWindow", "view"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.new_icon.setText(_translate("MainWindow", "new"))
        self.actionopen.setText(_translate("MainWindow", "open"))
        self.actionsave.setText(_translate("MainWindow", "save"))
        self.actioncut.setText(_translate("MainWindow", "cut"))
        self.actioncopy.setText(_translate("MainWindow", "copy"))

        self.actionpaste.setText(_translate("MainWindow", "paste"))
        self.actionZoom_out.setText(_translate("MainWindow", "Zoom out"))
        self.actionundo.setText(_translate("MainWindow", "undo"))
        self.actionredo.setText(_translate("MainWindow", "redo"))

        self.actionprint.setText(_translate("MainWindow", "print"))

        self.actionZoom_in_1.setText(_translate("MainWindow", "Zoom in"))
    
    def cut_fun(self):
        self.textEdit.cut()
    def paste_fun(self):
        self.textEdit.paste()
    def copy_fun(self):
        self.textEdit.copy()
    
    def save_fun(self):
        self.textEdit.saveGeometry()
        file_path=QFileDialog.getSaveFileName(self.menufile,'Open',"",'text(*.txt)')
        content = self.textEdit.toPlainText()
        with open(file_path[0], 'w') as f:
            f.write(content)

    def redo_fun(self):
        self.textEdit.redo()
    def undo_fun(self):
        self.textEdit.undo()

    def print_file(self):
        printer = QPrinter()
        dialog = QPrintDialog(printer, self)  # 'self' here is the QMainWindow
        if dialog.exec_() == QPrintDialog.Accepted:
            self.textEdit.print(printer,None)


    def zoomin_fun(self):
        self.textEdit.zoomIn()
    def zoomout_fun(self):
        self.textEdit.zoomOut()
    def new_fun(self,MainWindow ):
    #    _translate = QtCore.QCoreApplication.translate
       self.textEdit.clear()
       
    #    MainWindow.setWindowTitle(_translate("MainWindow", "Untitled"))
    def open_fun(self):
        open_1= QFileDialog.getOpenFileName(self.menufile,'Open',"",'text(*.txt)')
        with open(open_1[0],'r')as f:
            filetext=f.read()
            self.textEdit.setPlainText(filetext)
    
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
